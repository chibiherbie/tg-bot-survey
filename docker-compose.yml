services:
  backend:
    env_file: .env
    build: backend
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:${BACKEND_PORT}/backend/api/health",
        ]
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      database:
        condition: service_healthy

  scheduler:
    env_file: .env
    build: scheduler
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy

  database:
    image: postgres:17.5-alpine3.22
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGPORT: ${POSTGRES_PORT:-5432}
    ports:
      - ${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
